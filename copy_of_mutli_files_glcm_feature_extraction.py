# -*- coding: utf-8 -*-
"""Copy of mutli_files_GLCM_Feature_Extraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gB8wmAKJq_o849023AdM859IOM_wBNCf
"""

from google.colab import drive
drive.mount('/content/drive')



import os
import cv2
import pandas as pd
import numpy as np
import csv

from skimage.feature import graycomatrix, graycoprops

def process_images_and_filenames(folder_path):

    grayscale_images = []
    filenames = []

    for filename in os.listdir(folder_path):
        if filename.lower().endswith(('.png', '.jpg', '.jpeg', '.tiff', '.bmp', '.gif')):
            image = cv2.imread(os.path.join(folder_path, filename))
            gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            grayscale_images.append(gray_image)
            filenames.append(filename)

    grayscale_images_array = np.array(grayscale_images)
    return grayscale_images_array, filenames

folder_path = '/content/drive/MyDrive/GLCM_Test/AFFECTED'
grayscale_images_array, filenames = process_images_and_filenames(folder_path)

properties = ['dissimilarity', 'correlation', 'homogeneity', 'contrast', 'ASM', 'energy']

def calc_glcm_all_agls(img,
                       label,
                       props=properties,
                       dists=[5],
                       agls=[0, np.pi/4, np.pi/2, 3*np.pi/4],
                       lvl=256,
                       sym=True,
                       norm=True):

    glcm = graycomatrix(img, distances=dists, angles=agls, levels=lvl, symmetric=sym, normed=norm)

    feature = []
    feature.append(label)

    glcm_props = [propery for name in props for propery in graycoprops(glcm, name)[0]]

    for item in glcm_props:
            feature.append(item)

    return feature

glcm_all_agls = []
for img, label in zip(grayscale_images_array, filenames):
    glcm_all_agls.append(
            calc_glcm_all_agls(img,
                                label,
                                props=properties)
                            )

columns = []
columns.append("label")
angles = ['0', '45', '90','135']
for name in properties :
    for ang in angles:
        columns.append(name + "_" + ang)

glcm_df = pd.DataFrame(glcm_all_agls,
                      columns = columns)

glcm_df.head(3)